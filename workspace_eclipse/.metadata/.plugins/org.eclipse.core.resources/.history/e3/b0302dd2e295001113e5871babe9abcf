# ==============================================================================
#
#   TMF Agent I36 configuration file
#
# ==============================================================================

# they will be overwritten by I38Plugin
EMS.nmName = SO
EMS.emName = Fusion
EMS.snName = Fusion
EMS.type   = EM

# ======================================
#
#  Plug-in
#
# ======================================

#Plugin installation type
#Collocated means TMF and EM running on same server
#Dislocated means TMF and EM running on different servers
Plugin.InstallationType=UNDEFINED

##
# is the i36 plugitn running standAlone?
# it will be overwritten by I38Plugin
PlugIn.standAlone=no

##
# if this property is yes (true) than the plugin completet the
# start procedure after all NEs have been realigned
# it will be overwritten by I38Plugin
PlugIn.synchronousStart=no
##
# if this property is yes (true) than the plugin completes the
# setMEDnList procedure after all new NEs have been realigned
PlugIn.synchronousNodeRealignment=yes
##
# this property specifies how long wait for the first connection
# on I36. Aftre the start procedure wiil complete anyway
# in millis
PlugIn.timeoutOnFirstConnection = 30000
# used to specify if nativeName should be used also for userLabel
# it will be overwritten by I38Plugin
PlugIn.objectCreation.SetUserLabel = false

PlugIn.EMSName=ServiceOn Optical NMS
PlugIn.EMSVersion=15.2.1

PlugIn.MeRefreshInterval=20000
PlugIn.MeRefreshFailures=3

PlugIn.signalTypeMappingCnf=${Framework.conf}/SignalTypeMapping.properties
PlugIn.alarmConfiguration=${Framework.conf}/Alarm.properties
PlugIn.layerRateToI36Measure=${Framework.conf}/LayerRateToI36Measure.properties
PlugIn.layerRateToI36SignalType=${Framework.conf}/LayerRateToI36SignalType.properties
PlugIn.granularityToI36Granularity=${Framework.conf}/GranularityToI36Granularity.properties
PlugIn.equipmentInfo=${Framework.conf}/EquipmentInfo.properties
PlugIn.supportedProtectionInfo=${Framework.conf}/SupportedProtectionInfo.properties
PlugIn.tpSupportedOperations = ${Framework.conf}/TPSupportedOperations.properties

##
# used to convert stm1 electrical to optical
# true  --> convertion will be done
# false --> no convertion will be done
# default (when missing) is false
PlugIn.onlyStmOptical = false

# == Database manager ===================================
PlugIn.databaseManager.configuration = ${Framework.conf}/I36DatabaseManager.properties

# == SBI ================================================
# venice
PlugIn.SBI.host=milan
PlugIn.SBI.configuration.port=1966
PlugIn.SBI.events.port=1967

#IANUS
#PlugIn.SBI.host=eitpiux003.it.eu.ericsson.se
#PlugIn.SBI.configuration.port=23730
#PlugIn.SBI.events.port=23731

##
# timeout for all I36 msg
# 0 means forever
PlugIn.SBI.timeout=3m

##
# delay for retrying connection (in millis)
PlugIn.SBI.reconnectionDelay = 2m
##
# timeout for getMsp,getBSHR,getEquipmentProtection
# 0 means forever Unit=Second
PlugIn.SBI.InterInterfaceTimeOut=30s


########
# used to get the TrailTrace information
# true --> getTP information from TMF DB
# false --> getTP information from NE.
PlugIn.I36.getTPFromDB = true
#TrailTraceParameters max length
PlugIn.I36.TrailTraceParamLength=15
#######

#yes = fast ethernet associted with backplane-- TPs will be build on the fly
#no = fast ethernet associated with backplane -- TPs will be return from TMFDB
PlugIn.ethBackplane.getTps = Yes


#Added for FTP and CTP naming, when frequency is negative
PlugIn.naming.PTP.negativeFrequency.label = UNCONFIGURED
PlugIn.naming.CTP.negativeFrequency.label = UNCONFIGURED

#Property for control plane management - The values can be yes(supports control plane) / no
PlugIn.ControlplaneManagement = no

#Property used for modeling a WDM port with an OSC card type
PlugIn.SBI.OpticalAmplifierPortModelStrategy = OA

# PDM
#Added this flag to get PerformanceMgr of PEN
PlugIn.SBI.PEN.isPenPerfMgrReqd = yes
PlugIn.SBI.PDMSupported = yes
#Adding Ethernet LayerRates related to PEN
#for Performance Management in RMON
PlugIn.ethernetSupported.layerRates=\
	LR_Ethernet,\
	LR_DSR_Fast_Ethernet,\
	LR_DSR_Gigabit_Ethernet,\
	LR_DSR_10Gigabit_Ethernet,\
	LR_FC_100_1063M,\
	LR_FC_1000_10520M,\
	LR_FC_12_133M,\
	LR_FC_1200_12750M,\
	LR_FC_1600_17000M,\
	LR_FC_200_2126M,\
	LR_FC_25_266M,\
	LR_FC_400_4250M,\
	LR_FC_50_531M,\
	LR_FC_800_8500M,\
	LR_PHYSICAL_OPTICAL,\
	LR_Optical_Transmission_Section,\
	LR_Optical_Channel,\
	LR_PHYSICAL_ELECTRICAL


# PDM Supported Version For GetDataExtensionManager
PlugIn.SBI.PDMsupportedVersion4GetDataExtMan = 1.0

#this property to define the batch length for getting Data Extension Managers for the set of NE's at a time
PlugIn.SBI.DataExtnMgr.batchLength= 500

# Different versions of PDM supported by TMF
# This property is used to determine if an NE reported should be managed by TMF or not
PlugIn.SBI.PDMInterfaceSupportedVersions = 3.0 4.0 5.0 5.1 6.0

# time interval between consecutive reconnection attempts, ping attempts to server. Minimum value = 30s (30 sec)
PlugIn.SBI.PDMConnectionTimeout = 2m
# set to -1 for maximum(infinite) reconnection attempts
PlugIn.SBI.PDMReconnections = -1

# Generic PDM Message Timeout (if specific PDM Message Timeouts not mentioned, this will be taken)
PlugIn.SBI.PDMMsgTimeout = 10m

# Specific PDM Message Timeouts, timeout for each kind of PDM message (overrides the generic PDM Message Timeout)
PlugIn.SBI.PDMMsgGetDataNeAndCardConfTimeout = 10m
PlugIn.SBI.PDMMsgGetDataPortAndMFDConfTimeout = 20m
PlugIn.SBI.PDMMsgGetDataCrossConnTimeout = 15m
# This PDM message timeout is used for SetDataCrossConnections (i.e. for Create/Modify/Delete DataCrossConnection)
PlugIn.SBI.PDMMsgSetDataCrossConnTimeout = 10m
PlugIn.SBI.PDMMsgGetBridgeStateTimeout = 10m
# These timeOuts are introduced for MPLS messages
PlugIn.SBI.PDMMsgGetMplsTunnelsLspAndCrossConnectionsTimeOut = 10m
PlugIn.SBI.PDMMsgGetVPNCrossConnectionsTimeout = 10m
PlugIn.SBI.PDMMsgGetBridgeStateTimeout = 10m
PlugIn.SBI.PdmMsgGetMplsProtectionInfoTimeout = 10m
PlugIn.SBI.PdmMsgSetMplsMonitoringCommandsTimeout = 10m
PlugIn.SBI.PDMMsgModifyMplsTunnelsLspAndCrossConnectionsTimeOut = 10m


# == Managed Element Event == START ==========
PlugIn.ME.event.linkUp.delay = 2s
PlugIn.ME.event.linkDown.delay = 2s
# == Managed Element Event == END ==========

# == Managed Element manager == START ==========

PlugIn.ManagedElement.implementation = com.marconi.fusion.tmf.i36PlugIn.manager.ManagedElementMgrImpl

# == Managed Element manager == END ============

# == Gui Cut manager == START ==========

PlugIn.GuiCutThrough.implementation = com.marconi.fusion.tmf.i36PlugIn.manager.GuiCutThroughMgrImpl

# == Gui Cut manager == END ============

# == Equipment Inventory manager == START ==========

PlugIn.EquipmentInventory.implementation = com.marconi.fusion.tmf.i36PlugIn.manager.EquipmentInventoryMgrImpl

# == Equipment Inventory manager == END ============

# == EMS manager == START ==========

PlugIn.EMS.implementation = com.marconi.fusion.tmf.i36PlugIn.manager.EMSMgrImpl

# == EMS manager == END ============

# == MultilayerSubnetwork manager == START ==========

PlugIn.MultiLayerSubnetwork.implementation = com.marconi.fusion.tmf.i36PlugIn.manager.MultiLayerSubnetworkMgrImpl

# == MultilayerSubnetwork manager == END ============

# == Performace manager == START ==========

PlugIn.PerformanceManagement.implementation = com.marconi.fusion.tmf.i36PlugIn.manager.PerformanceMgrImpl

# == Performace manager == END ============

# == Protection manager == START ============

PlugIn.Protection.implementation = com.marconi.fusion.tmf.i36PlugIn.manager.ProtectionMgrImpl

# == Protection manager == END ============

# == Maintenance manager == START ============

PlugIn.Maintenance.implementation = com.marconi.fusion.tmf.i36PlugIn.manager.MaintenanceMgrImpl
# set to true to allow custom maintenance operation
# it could be overwritten by I38Plugin according to its property

com.marconi.fusion.tmf.i36PlugIn.manager.MaintenanceMgrImpl.supportCustomOperation = true

# == Maintenance manager == END ============

# == Flow Domain manager == START ============

PlugIn.FlowDomain.implementation = com.marconi.fusion.tmf.i36PlugIn.manager.FlowDomainMgrImpl

# == Flow Domain manager == END ============

# == TCProfile manager == START ============

PlugIn.TrafficConditioningProfile.implementation = com.marconi.fusion.tmf.i36PlugIn.manager.TCProfileManagerImpl

# == TCProfile manager == END ============


# PROTECTION
PlugIn.Protection.mspProtection = ${Framework.conf}/MSPProtection.properties
PlugIn.Protection.ProtectionStatusSelector = ${Framework.conf}/ProtectionStatusSelector.properties
PlugIn.Protection.TimeOutSetAndGet = 3m
PlugIn.Protection.SkipTimeOutSetAndGet = false
PlugIn.Protection.ProtectionSwitchThreads = 1
PlugIn.Protection.ProtectionSwitchAttempts = 0
PlugIn.Protection.ProtectionSwitchDelay = 15s
PlugIn.Protection.MspRealign = false
PlugIn.Protection.EquipmentProtectionRealign = false
PlugIn.Protection.SwitchDuplicate = false
PlugIn.Protection.SwitchDataHome = ${Framework.home}/TMP

# SNC Protection SwitchMode
# The default value to take while creating SNC if the NE supports ProtOperMode.
# The valid values are singleEnded, dualEnded, undefined.
PlugIn.SNC.SwitchMode = singleEnded

#Snc protection switch event buffer
PlugIn.Protection.ProtectionSwitchEventsBufferSize=1280
PlugIn.Protection.BufferedProtectionSwitchEventTimeOut=5m
Plugin.Protection.ProtectionBufferFlushDelay=150s

PlugIn.sncs.exportFile = ${Framework.home}/CUSTOMER_DATA/

PlugIn.Action.ActionSwitchAttempts = 3
PlugIn.Action.ActionSwitchDelay = 15s
# INVENTORY
# setting variable for EquipmentInventoryManage
PlugIn.inventory.workingDir = ${Framework.home}/INVENTORY
PlugIn.inventory.fileNameFormat = NE:%d.inv.dhl
PlugIn.inventory.server = ${PlugIn.SBI.host}
PlugIn.inventory.sourceDirectory = /opt/mv36/core/nmc/hist/datahaul

PlugIn.inventory.entityDirectory = /opt/mv36/core/data/data/xml/Inventory
PlugIn.inventory.entityPattern = .*[.]((entity)|(dtd))

##
# the following entries are about the costruction of some attributes for equipment
# this will overwrite values valuated from I36
# default values are false
PlugIn.inventory.installedEquipmentObjectType.asEquipIdentity = false
PlugIn.inventory.expectedEquipmentObjectType.asEquipIdentity = false
PlugIn.inventory.nativeEMSName.asEquipIdentity = true

# to remove the physicalSlotId from equipIdentity set the value to true
PlugIn.inventory.nativeEMSName.removeSlotId = false

# specify an user (and password) to login into home directory of the
# installed MV36
# otherwise modify above directory as needed
# no longer used configure it using SetupUser script
#PlugIn.inventory.username = nmcman
#PlugIn.inventory.password =

PlugIn.inventory.scheduleAt = 2:00:00
# in minutes
PlugIn.inventory.scheduleDelay = 1440

# ======
# PMM
# ======

PlugIn.performance.workingDir = ${Framework.pmm}
PlugIn.performance.server = ${PlugIn.SBI.host}
PlugIn.performance.note = TMF814
PlugIn.performance.getCollection.note = all
PlugIn.performance.sourceDirectory = /opt/mv36/core/nmc/EMexport
# no longer used configure it using SetupUser script
#PlugIn.performance.username = nmcman
#PlugIn.performance.password =
PlugIn.performance.deleteRemoteFiles = yes
PlugIn.performance.PEN.getCollection.note = TMF814


#
# it could be overwritten by I38Plugin according to its property (with the same name)
PlugIn.performance.deleteFileAfterSend = yes

PlugIn.performance.enableCompression = yes
PlugIn.performance.compression.gz = java.util.zip.GZIPOutputStream
PlugIn.performance.compression.Z = java.util.zip.ZipOutputStream
## timeout
## 3600000 = 1h
PlugIn.performance.timeoutExport = 1h
PlugIn.performance.useLongNames = yes

#
# it could be overwritten by I38Plugin according to its property (with the same name)
PlugIn.performance.deleteTemporaryFiles = yes

# used to stop counter on ME wahe a collection (JOB) is aborted
# default = yes
PlugIn.performance.stopCounterOnAbortCollection = yes

## enable/disable PMData
# force the report of granularities in response
# even if granularities had not been specified
PlugIn.performance.forceGranularity = true

# force the report of locations in response
# even if locations had not been specified
PlugIn.performance.forceLocation = true
#To solve the TR HO10060
PlugIn.performance.timeOffset15 = 0
PlugIn.performance.timeOffset24 = 0

PlugIn.performance.getAllCurrentPMData.onlyCurrent = true
PlugIn.performance.startTime.periodicInterval.GapInMinutes = 2
#default endTime which is sent to PEN for startCollection in Performance Manager
PlugIn.performance.StartCollection.endTimeInPen= 0
##
# to configure the data processor pool for performance files
PMDataProcessor.corePoolSize = 1
PMDataProcessor.maximumPoolSize = 20
PMDataProcessor.keepAliveTime = 120
PMDataProcessor.unit = SECONDS

# =====
# ALARMS
# =====
#
# Se mapOperationlStateOnServiceState = false => ServiceState e' sempre IN_SERVICE
# Se mapOperationlStateOnServiceAffecting = false => ServiceAffecting calcolato
# in base alla severity come dice la X733
# Possono anche essere entrambi a true
#

com.marconi.fusion.tmf.i36PlugIn.EventCollector.delegate = com.marconi.fusion.tmf.i36PlugIn.AlarmProcessor2

##
# this is the old version: it suffer of a too strong synchronization that makes the alarm processing
# too slow
#com.marconi.fusion.tmf.i36PlugIn.EventCollector.delegate = com.marconi.fusion.tmf.i36PlugIn.AlarmProcessor

com.marconi.fusion.tmf.i36PlugIn.AlarmProcessor.delegate = com.marconi.fusion.tmf.i36PlugIn.AlarmRaiser
# default = 10s
com.marconi.fusion.tmf.i36PlugIn.AlarmProcessor.delay = 5s
# default = infinite
com.marconi.fusion.tmf.i36PlugIn.AlarmProcessor.burstSize = 100


com.marconi.fusion.tmf.i36PlugIn.AlarmProcessor2.delegate = com.marconi.fusion.tmf.i36PlugIn.AlarmRaiser
# default = 10s
com.marconi.fusion.tmf.i36PlugIn.AlarmProcessor2.timeSlice = 5s
# default = infinite
com.marconi.fusion.tmf.i36PlugIn.AlarmProcessor2.threshold = 100

PlugIn.alarm.alarmsManagementEnabled = true

PlugIn.alarm.mapOperationlStateOnServiceState = true
PlugIn.alarm.mapOperationlStateOnServiceAffecting = false

PlugIn.alarm.forceProcessingAlarm = true
PlugIn.alarms.beginningUnacknowledged = true
PlugIn.alarms.tcaUnitIdEnable = false
PlugIn.alarm.provisioning.checkUnitForTCA = false
PlugIn.alarm.provisioning.forceClearOldAlarms = false

PlugIn.alarms.acknowledgeAlarmFile = ${Framework.home}/CUSTOMER_DATA/
#If this value is Yes the alarms shall be acknowledged from the information present in the acknowledgeAlarmFile.
PlugIn.alarms.acknowledgeAlarms = no

##
# additional information carried by alarmDetailReport to be added in X733 additional info
# for notifications
# it is also possible to add
# alDetail
PlugIn.alarm.x733.additionalInfo = alDetailStr, neModel, cardDetailStr

PlugIn.alarm.x733.additionalInfo.alDetailStr.name = alarmDetail
PlugIn.alarm.x733.additionalInfo.alDetailStr.value = %s
PlugIn.alarm.x733.additionalInfo.neModel.name = neModel
PlugIn.alarm.x733.additionalInfo.neModel.value = %s
PlugIn.alarm.x733.additionalInfo.cardDetailStr.name = cardDetail
PlugIn.alarm.x733.additionalInfo.cardDetailStr.value = %s
#PlugIn.alarm.x733.additionalInfo.alDetail.name = detail
#PlugIn.alarm.x733.additionalInfo.alDetail.value = %s
#This property suppression all the alarms on a port which does not have any connection if property is true
PlugIn.alarm.suppressionOnPortWithoutConnections = false

PlugIn.alarm.em.communication = \
    alarm : { \
      notificationId '', \
      alarmIdentifier '', \
      objectName emsDn : { ems '' }, \
      nativeEMSName '', \
      objectType ot_ems, \
      emsTime '', \
      neTime '', \
      isClearable true, \
      perceivedSeverity ps_critical, \
      assignedSeverity as_critical, \
      layerRate 1, \
      acknowledgeIndication ai_event_unacknowledged, \
      correlatedAlarmIdentifiers {}, \
      probableCause 'EMS', \
      nativeProbableCause '', \
      probableCauseQualifier 'EM Communication Loss', \
      serviceAffecting sa_non_service_affecting, \
      affectedTPList {}, \
      additionalText '', \
      x733Info {}, \
      rcaiIndicator false \
  }

PlugIn.alarm.provisioning.neProvisiongEnabled = true

# uncomment this to have an alarm on ME linkDown (alam ON) and linkUp (alarm OFF)
#PlugIn.alarm.ME.linkUpDown = \
  alarm : { \
      notificationId '', \
      alarmIdentifier '', \
      objectName meDn : { me '' }, \
      nativeEMSName '', \
      objectType ot_managed_element, \
      emsTime '', \
      neTime '', \
      isClearable true, \
      perceivedSeverity ps_warning, \
      assignedSeverity as_warning, \
      layerRate 1, \
      acknowledgeIndication ai_event_unacknowledged, \
      correlatedAlarmIdentifiers {}, \
      probableCause 'EMS', \
      nativeProbableCause '', \
      probableCauseQualifier 'ME Communication Loss', \
      serviceAffecting sa_non_service_affecting, \
      affectedTPList {}, \
      additionalText '', \
      x733Info {}, \
      rcaiIndicator false \
  }

# =====

# ===
# Protection synchronization
# ===
PlugIn.protectionSynch.enabled = no
PlugIn.protectionSynch.sncp = no
PlugIn.protectionSynch.protectionGroup = no
PlugIn.protectionSynch.eProtectionGroup = no
# =====
#SubNetwork Protecttion
#Added ODU layer rates for ODU crossconnections in peripheral matrix as a part of MHL6.0 IP
PlugIn.subNetworkConnection.layerRates=\
	LR_E1_2M,\
	LR_Ethernet,\
	LR_VT2_and_TU12_VC12,\
	LR_VT6_and_TU2_VC2,\
	LR_Low_Order_TU3_VC3,\
	LR_STS3c_and_AU4_VC4,\
	LR_STS12c_and_VC4_4c,\
	LR_STS192c_and_VC4_64c,\
	LR_Optical_Channel,\
	LR_STS768c_and_VC4_256c,\
	LR_STS48c_and_VC4_16c,\
	LR_OCH_Data_Unit_1,\
	LR_OCH_Data_Unit_2,\
	LR_OCH_Data_Unit_3

# =====
# REALIGNMENT
# =====
PlugIn.realignment.realignmentOnModification = yes
PlugIn.realignment.realignmentOnLinkup = yes
PlugIn.realignment.realignmentAtBoot = yes
PlugIn.realignment.concurrentRealignment = 12
PlugIn.realignment.livingThread = 1
PlugIn.realignment.onlyKnownPorts = no
# specifies if realign collection (use no to disable)
PlugIn.realignment.collection = yes
PlugIn.realignment.berHome = ${Framework.home}/BER
PlugIn.SBI.setAlarmTpIndex=false

## time: use s for seconds, m for minutes, h for hour, S or nothing for millis
## ie: 10s = 10000 millis
##     5m  = 300s = 300000 millis
PlugIn.realignment.delay = 10s
PlugIn.realignment.msgTimeout = 10m
# To solve the TR HM14896 . To fasten the I36 Realignment
PlugIn.realignment.fastRealignment = yes
PlugIn.meGranularity = 100

PlugIn.I36SyntaxTag = I36
PlugIn.I36SyntaxSeparator = _
PlugIn.LatestI36Index = 0
PlugIn.I36Index.14_1 = ${PlugIn.LatestI36Index}
PlugIn.I36Index.13_4 = 1
PlugIn.I36Index.13_3 = 2
PlugIn.I36Index.13_2 = 3
PlugIn.I36Index.12_1 = 4
PlugIn.I36Index.11_6 = 5

PlugIn.PENSyntaxTag = PEN
PlugIn.PENSyntaxSeparator = _
PlugIn.LatestPENIndex = 0
PlugIn.PENIndex.2_1 = ${PlugIn.LatestPENIndex}
PlugIn.PENIndex.1_8 = 1
PlugIn.PENIndex.1_6 = 2
PlugIn.PENIndex.1_4 = 3

PlugIn.X36SyntaxTag = X36
PlugIn.X36SyntaxSeparator = _
PlugIn.LatestX36Index = 0
PlugIn.X36Index.14_1 = ${PlugIn.LatestX36Index}
PlugIn.X36Index.13_4 = 1
PlugIn.X36Index.13_3 = 2
PlugIn.X36Index.13_2 = 3
PlugIn.X36Index.12_1 = 4
PlugIn.X36Index.11_6 = 5

# =====
# PROVISIONING
# the default for all this entries is yes
# =====
#PlugIn.provisioning.neVisualState = no
PlugIn.provisioning = {portLabel,linkState,modifiedNe,protectionChange,alarmResourceEnableState,modifiedNeAddress,modifiedNeName}
PlugIn.provisioning.alarmRetrialInterval = 1m
PlugIn.provisioning.alarmMaxRetrials = 200

# =====
# NAMING
# =====
# in order
# neId(int), location(string), acronym(string),
# identifier(int), neModel(string), vendor(string)
# argument index starts from 1

#PlugIn.naming.ME.format = %d
PlugIn.naming.ME.format = %2$s,%4$s,%5$s


# %d is the MFDid carried by PDM
PlugIn.MFD.name.format = %d

#the first %s is related to ME name and the second %s to MFD name
PlugIn.FD.name.format = %s-%s

#The topological link syntax will be exported to TL_Syntax_<SNO>, where SNO starts with 1
#and increments by 1 as the file size exceeds a fixed limit. The CustomerData will be created in the framework home directory.
PlugIn.topologicalLink.exportFile =  ${Framework.home}/CUSTOMER_DATA/

#the
PlugIn.FDFr.name.format = %10s

# true  = use the I36SlotId to build PTP names
# false = use the I36CardId to build PTP names
PlugIn.naming.EQ.useSlotId = false

# true  = use the I36SlotId to build EQ names
# false = use the I36CardId to build EQ names
PlugIn.naming.PTP.useSlotId = false
# for PTP native EMS name is build using card nativeEMSName and port id from I36
# in that order
PlugIn.naming.PTP.nativeEMSName.format = %s-%d

# the separator used building namtivEMSName for CTPs
PlugIn.naming.CTP.nativeEMSName.separator = -

# for EH native EMS name is build using shelf type and shelf id from I36
# in that order
# to have also sheldId use %s-%d
PlugIn.naming.EH.nativeEMSName.format = %s

# for EQ native EMS name is build using cardName and cardType from I36
# in that order
# it could be override by inventory setup (see below)
# change the format to have different strings
# es %2$s %1$s
#    %s-%s
# the following for only the card name
PlugIn.naming.EQ.nativeEMSName.format = %s
# use the cardType as cardName if cardName is empty. Default = true
PlugIn.naming.EQ.eqCardNameAsCardTypeIfEmpty = true

# for PG native EMS name is build using name, protectionGroupType and extraTraffic from I36
# in that order
# change the format to have different strings
# es %2$s %1$s %3$s
#    %s-%s
# the following for protectionGroupType and extraTraffic value
PlugIn.naming.PG.nativeEMSName.format = %2$s/%3$s%1$s
# for EPG native EMS name is build using name and eProtectionGroupType from I36
# in that order
# change the format to have different strings
# es %2$s %1$s
#    %s-%s
# the following for name and eProtectionGroupType value
PlugIn.naming.EPG.nativeEMSName.format = %1$s/%2$s
# the following for name of AID alarm (NeId-ShelfId-CardId-PortId) - TR HL37856 & HL37850
PlugIn.naming.AID.nativeEMSName.format = %1$s-%2$s-%3$s-%4$s

#SXU3B naming
PlugIn.SXU3B.BackPlaneNaming = true

# =====
# LAYERED PARAMS
# =====
# use slotId or cardId to format Location
PlugIn.layeredParams.location.useSlotId = true
# use OuterReceivingCard for wdmPort
PlugIn.layeredParams.location.useOuterReceivingCard = true

# read as string. Unit are meters
PlugIn.layeredParams.maxLaserDistance = 80000

# Osc Parameter
PlugIn.layeredParams.oscPattern = OSU_DUAL
PlugIn.layeredParams.inBandPattern = INBAND_OSC
PlugIn.layeredParams.inBandCentralFreq = 192.10
PlugIn.layeredParams.inBandFreqSpacing = 50
PlugIn.layeredParams.setParamForOscOutOfBand = false
PlugIn.layeredParams.outOfBandCentralFreq = 1510
PlugIn.layeredParams.outOfBandFreqSpacing = 4

# PEN Params
PlugIn.SBI.PEN.hostName = ${PlugIn.SBI.host}
PlugIn.SBI.PEN.hostLocation = ${PlugIn.SBI.host}
PlugIn.SBI.PEN.port = 12456
PlugIn.SBI.PEN.version = 0201
PlugIn.SBI.PEN.nameService = NameService=corbaloc:iiop:1.2@${PlugIn.SBI.PEN.hostName}:${PlugIn.SBI.PEN.port}/NameService
PlugIn.SBI.PEN.nameContext = Marconi/ServiceOn/PEN/${PlugIn.SBI.PEN.hostLocation}/${PlugIn.SBI.PEN.version}/SessionFactory

PlugIn.SBI.PEN.nodeListRequired = no

#This property specifies if the user label of the ME shall be set to nativeEmsName or empty
PlugIn.objectCreation.ME.SetUserLabel=true

#This property specifies the format used to make  the nativeEmsName of the ME
PlugIn.naming.ME.nativeEMSName.format = %2$s.%3$s.%4$d

#specifies the delay after which the NE should be deleted from the TMF Database
PlugIn.ME.deletion.delay = 5m

#specifies the version of the ASN used in I36Plugin
Plugin.ASN.X36Version = 14.1.4

#specifies the version of the TMF from where BER file is taken.
PlugIn.ber.SORelease = 3_2

#These properties specifies the version of X36 asn used by respective TMF versions
PlugIn.ber.x36.2_1 = 11_6
PlugIn.ber.x36.2_2 = 12_1
PlugIn.ber.x36.3_1 = 13_2
PlugIn.ber.x36.3_2 = 13_2

#specifies the version of the TMF from where BER file is taken.
PlugIn.ber.SORelease = 3_2

#specifies the location of the file in which SNC label is exported
PlugIn.ber.SNCLabelFile = ${Framework.home}/CUSTOMER_DATA/

#specifies the location of the file in which FDFr data is exported
PlugIn.ber.FDFrTypeFile = ${Framework.home}/CUSTOMER_DATA/

#specifies the location of the file from where TCAPP data has to be imported
PlugIn.ber.TCAPPFile = ${Framework.home}/CUSTOMER_DATA/

#These properties specifies the version of X36 asn used by respective TMF versions
PlugIn.ber.x36.2_1 = 11_6
PlugIn.ber.x36.2_2 = 12_1
PlugIn.ber.x36.3_1 = 13_2
PlugIn.ber.x36.3_2 = 13_2

PlugIn.MaxParallelPMPRealignments = 1
PlugIn.pmpSourceSpecSize = 800

#This property has been added as part of MPLS Support.
#It specifies whether the LSP TP should be retrieved using LSP Logical Index or LSP physical Index.
PlugIn.findLspTpWithLogicalIndex = true
# =====
# DEBUG
# =====
#PlugIn.debug.neIdList = { 25, 109, 110, 121, 122, 126, 127, 128, 129, 130, 133, 134, 136, 137, 139, 148, 149  }
#PlugIn.debug.neIdList = { 138 }
#PlugIn.debug.neIdList = { 122, 137 }
PlugIn.debug.neIdList = { }

# == EOF =======================================================================

