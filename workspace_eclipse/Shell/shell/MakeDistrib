#!/bin/sh

##############################
#
# TARGETS
#
##############################

DISTRIB_DIR=$(pwd)

DD=`/bin/date '+%y_%m_%d'`

##############################
#
# COMMAND
#
##############################

RMDIR="/bin/rm -rf"
RM="/bin/rm -f"
CP="/bin/cp -r"
MV="/bin/mv"
STRIP="strip"

##############################
AGENT_MODE=""

curr_os=$(uname -s)
ext_os=""
if [ "${curr_os}" = "HP-UX" ];
then
  HP_ARCH="pa11"
  my_o="echo"
  if [ -x /usr/bin/hp-pa ];
  then
    $(/usr/bin/hp-pa)
    if [ $? -ne 0 ];
    then
      HP_ARCH="ia64"
      OS_SUBVER=$(uname -r | awk -F. '{print $3}')
      if [ "${OS_SUBVER}" -ge "31" ];
      then
        HP_ARCH="ia64_31"
      fi
    fi
  fi
  ext_os="${curr_os}.${HP_ARCH}"
elif [ "${curr_os}" = "Linux" ];
then
  ext_os="${curr_os}"
  my_o="echo -e"
  if [ -e "/etc/SuSE-release" ]
  then
    LIN_VER=$(cat "/etc/SuSE-release" | grep VERSION | cut -d "=" -f 2)
    if [ "${LIN_VER}" -ge "10" ];
    then
      ext_os="${curr_os}_10"
    fi
  fi
else
  tmp_os=$(echo ${curr_os} |grep -i cygwin)
  if [ "${tmp_os}" != "" ];
  then
    curr_os="Cygwin"
    ext_os="${curr_os}"
     my_o="echo -e"
  else
    echo "Unknown OS: ${curr_os}"
    echo "Exiting..."
    exit 1
  fi
fi

isNumeric()
{
   # This routine will return true (0) if the string contains all numeric
   # characters.

   expr "$1" + 1 > /dev/null 2>&1
   if [ $? -ge 2 ]; then
      return 1
   fi
   return 0
}

typeset -i menu_mode=0

${my_o} ""
${my_o} "================  M E N U  =================\n"
${my_o} " 1. Create EM package\n"
${my_o} " 2. Create NM package\n"
${my_o} " 3. Exit\n"
${my_o} "============================================\n"

while [ "$menu_mode" -lt 1 -o "$menu_mode" -gt 3 ]
do
  ${my_o} "Please, enter your selection [1..3][default 3]: \c"
  read l_var
  if [ "${l_var}" = "" ];
  then
    l_var="3"
  fi
  if isNumeric "${l_var}"
  then
    menu_mode=${l_var}
  fi
done

if [ "$menu_mode" -eq 3 ];
then
  exit 0
fi

if [ -e "./AgentEnv.uff.$$" ];
then
  /bin/rm -f ./AgentEnv.uff.$$
fi

if [ -e "./AgentEnv.mode" ];
then
  /bin/rm -f ./AgentEnv.mode
fi

if [ "$menu_mode" -eq 1 ];
  then
     if [ -e "./AgentEnv_EM.${ext_os}" ] && [ -r "./AgentEnv_EM.${ext_os}" ];
	then
	  /bin/cp -f "./AgentEnv_EM.${ext_os}" AgentEnv.${ext_os}
	else
	  echo "Missing environment file ./AgentEnv_EM.${ext_os}"
	  echo "Exiting..."
	  exit 1
	fi
fi
if [ "$menu_mode" -eq 2 ];
 then
    if [ -e "./AgentEnv_NM.${ext_os}" ] && [ -r "./AgentEnv_NM.${ext_os}" ];
	then
	  /bin/cp -f "./AgentEnv_NM.${ext_os}" AgentEnv.${ext_os}
	else
	  echo "Missing environment file ./AgentEnv_NM.${ext_os}"
	  echo "Exiting..."
	  exit 1
	fi
fi

if [ -r "./AgentEnv.${ext_os}" ];
then
  /bin/cp -f "./AgentEnv.${ext_os}" AgentEnv.uff.$$
else
  echo "Missing environment file ./AgentEnv.${ext_os}"
  echo "Exiting..."
  exit 1
fi

if [ -r ./AgentEnv.uff.$$ ];
then
  . ./AgentEnv.uff.$$
  /bin/cp -f ./AgentEnv.uff.$$ ./AgentEnv
  if [ "$menu_mode" -eq 1 ];
  then
    AGENT_MODE="EM"
    echo "AGENT_MODE=\"EM\"" >> ./AgentEnv.mode
  fi
  if [ "$menu_mode" -eq 2 ];
  then
    AGENT_MODE="NM"
    echo "AGENT_MODE=\"NM\"" >> ./AgentEnv.mode
  fi

  chmod 444 ./AgentEnv.mode
else
  echo "ERROR: missing the environment file ./AgentEnv.uff.$$"
  echo "Check your media distribution"
  echo "Exiting.."
  exit 1
fi

if [ -e "./AgentEnv.uff.$$" ];
then
  /bin/rm -f ./AgentEnv.uff.$$
fi


#export SUPPORTED_OSSUBVER
#export SUPPORTED_OSVER
#export SUPPORTED_OS

#if [ ! -r ./ckproc.c ];
#then
#  echo "ERROR: missing the file ./ckproc.c"
#  echo "Check your media distribution"
#  echo "Exiting.."
#  exit 1
#fi
#
#if [ -r ./ckproc.mk ];
#then
#  make -f ./ckproc.mk clean
#  make -f ./ckproc.mk depend > /dev/null 2>&1
#  chmod 644 ./ckproc.mk > /dev/null 2>&1
#  make -f ./ckproc.mk
#else
#  echo "ERROR: missing the file ./ckproc.mk"
#  echo "Check your media distribution"
#  echo "Exiting.."
#  exit 1
#fi
#
#if [ ! -x ./ckproc ];
#then
#  echo "ERROR: missing or wrong the file ./ckproc"
#  echo "Check your media distribution"
#  echo "Exiting.."
#  exit 1
#fi

#if [ -r ./MONITORAPP/Makefile ];
#then
#  curr_dir=$(pwd)
#  cd "${curr_dir}/MONITORAPP"
#  make clean
#  make
#  cd "${curr_dir}"
#else
#  echo "ERROR: missing the file ./MONITORAPP/Makefile"
#  echo "Check your media distribution"
#  echo "Exiting.."
#  exit 1
#fi
#
#if [ ! -x ./MONITORAPP/monitorapp ];
#then
#  echo "ERROR: missing or wrong the file ./MONITORAPP/monitorapp"
#  echo "Check your media distribution"
#  echo "Exiting.."
#  exit 1
#fi

echo "Making ${AGENT_TAR}...."

cur_dir=$(pwd)

./MakeAgentTar ${AGENT_TAR} $menu_mode

if [ $? -ne 0 ]
then
    exit 1
fi

cd "${cur_dir}"

if [ -r ./.version ];
then
  chmod 444 ./.version
else
  echo "ERROR: missing the environment file ../PRIVATE_DISTRIB/.version"
  echo "Check your media distribution"
  echo "Exiting.."
  exit 1
fi

VERSION=$(cat ./.version | tr '[.]' '[_]')

TAR_NAME="${AGENT_INST_PREFIX}_${AGENT_MODE}_${VERSION}"

if [ "$menu_mode" -eq 1 ];
then
  tar cvf "${TAR_NAME}" "${AGENT_TAR}" AgentInst.sh AgentEnv.* .version setup.bat AgentEnv_EM.*
else
  tar cvf "${TAR_NAME}" "${AGENT_TAR}" AgentInst.sh AgentEnv.* .version setup.bat AgentEnv_NM.*
fi


if [ -a "${AGENT_TAR}.gz" ]
then
  $RM "${AGENT_TAR}.gz"
fi

# uncomment for win
#if [ -d ./TAR_WIN ];
#then
#  ${RMDIR} ./TAR_WIN
#fi
#  mkdir ./TAR_WIN
#  cp "${AGENT_TAR}"  ./TAR_WIN
#  cp setup.bat       ./TAR_WIN
#  cp AgentEnv.Cygwin ./TAR_WIN
#  cp .version        ./TAR_WIN
#  cp AgentInst.sh    ./TAR_WIN
#  cp -r BIN_WIN      ./TAR_WIN
#  cp SCRIPT/sof.ico  ./TAR_WIN

echo ""
echo "Making installation package ${TAR_NAME}.exe"

./MakeAutoDistrib "${TAR_NAME}"

echo ""
echo "Installation package ${TAR_NAME}.exe successfully done"

if [ -e "./${TAR_NAME}.exe" ];
then
  chmod 755 "./${TAR_NAME}.exe"
  if [ -e "./${TAR_NAME}.cksum" ];
  then
    chmod 644 "./${TAR_NAME}.cksum"
    ${RM} "./${TAR_NAME}.cksum"
  fi
  cksum "./${TAR_NAME}.exe" > "${TAR_NAME}.cksum"
  chmod 444 "${TAR_NAME}.cksum"
fi

$RM ./AgentEnv
$RM ./.version
$RM "./${AGENT_TAR}"

if [ -e "./AgentEnv.mode" ];
then
  /bin/rm -f ./AgentEnv.mode
fi

#make -f ./ckproc.mk clean

#if [ -r ./MONITORAPP/Makefile ];
#then
#  curr_dir=$(pwd)
#  cd "${curr_dir}/MONITORAPP"
#  make clean
#  cd "${curr_dir}"
#fi

echo ""
echo "The installation package is \"${TAR_NAME}.exe\""
echo "The cksum of this  package is \"${TAR_NAME}.cksum\""
echo ""

exit 0
